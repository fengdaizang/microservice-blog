<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fdzang.microservice.blog.article.dao.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.fdzang.microservice.blog.article.dao.domain.CommentDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate" />
    <result column="comment_email" jdbcType="VARCHAR" property="commentEmail" />
    <result column="comment_name" jdbcType="VARCHAR" property="commentName" />
    <result column="comment_article_id" jdbcType="VARCHAR" property="commentArticleId" />
    <result column="comment_sharp_url" jdbcType="VARCHAR" property="commentSharpUrl" />
    <result column="comment_url" jdbcType="VARCHAR" property="commentUrl" />
    <result column="comment_original_comment_id" jdbcType="VARCHAR" property="commentOriginalCommentId" />
    <result column="comment_original_comment_name" jdbcType="VARCHAR" property="commentOriginalCommentName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fdzang.microservice.blog.article.dao.domain.CommentDOWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent" />
    <result column="comment_thumbnail_url" jdbcType="LONGVARCHAR" property="commentThumbnailUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, comment_date, comment_email, comment_name, comment_article_id, comment_sharp_url, 
    comment_url, comment_original_comment_id, comment_original_comment_name
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    comment_content, comment_thumbnail_url
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fdzang.microservice.blog.article.dao.domain.CommentDOExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fdzang.microservice.blog.article.dao.domain.CommentDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from comment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.fdzang.microservice.blog.article.dao.domain.CommentDOWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment (comment_date, comment_email, comment_name, 
      comment_article_id, comment_sharp_url, comment_url, 
      comment_original_comment_id, comment_original_comment_name, 
      comment_content, comment_thumbnail_url
      )
    values (#{commentDate,jdbcType=TIMESTAMP}, #{commentEmail,jdbcType=VARCHAR}, #{commentName,jdbcType=VARCHAR}, 
      #{commentArticleId,jdbcType=VARCHAR}, #{commentSharpUrl,jdbcType=VARCHAR}, #{commentUrl,jdbcType=VARCHAR}, 
      #{commentOriginalCommentId,jdbcType=VARCHAR}, #{commentOriginalCommentName,jdbcType=VARCHAR}, 
      #{commentContent,jdbcType=LONGVARCHAR}, #{commentThumbnailUrl,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fdzang.microservice.blog.article.dao.domain.CommentDOWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentDate != null">
        comment_date,
      </if>
      <if test="commentEmail != null">
        comment_email,
      </if>
      <if test="commentName != null">
        comment_name,
      </if>
      <if test="commentArticleId != null">
        comment_article_id,
      </if>
      <if test="commentSharpUrl != null">
        comment_sharp_url,
      </if>
      <if test="commentUrl != null">
        comment_url,
      </if>
      <if test="commentOriginalCommentId != null">
        comment_original_comment_id,
      </if>
      <if test="commentOriginalCommentName != null">
        comment_original_comment_name,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="commentThumbnailUrl != null">
        comment_thumbnail_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentDate != null">
        #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentEmail != null">
        #{commentEmail,jdbcType=VARCHAR},
      </if>
      <if test="commentName != null">
        #{commentName,jdbcType=VARCHAR},
      </if>
      <if test="commentArticleId != null">
        #{commentArticleId,jdbcType=VARCHAR},
      </if>
      <if test="commentSharpUrl != null">
        #{commentSharpUrl,jdbcType=VARCHAR},
      </if>
      <if test="commentUrl != null">
        #{commentUrl,jdbcType=VARCHAR},
      </if>
      <if test="commentOriginalCommentId != null">
        #{commentOriginalCommentId,jdbcType=VARCHAR},
      </if>
      <if test="commentOriginalCommentName != null">
        #{commentOriginalCommentName,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="commentThumbnailUrl != null">
        #{commentThumbnailUrl,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fdzang.microservice.blog.article.dao.domain.CommentDOWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    <set>
      <if test="commentDate != null">
        comment_date = #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentEmail != null">
        comment_email = #{commentEmail,jdbcType=VARCHAR},
      </if>
      <if test="commentName != null">
        comment_name = #{commentName,jdbcType=VARCHAR},
      </if>
      <if test="commentArticleId != null">
        comment_article_id = #{commentArticleId,jdbcType=VARCHAR},
      </if>
      <if test="commentSharpUrl != null">
        comment_sharp_url = #{commentSharpUrl,jdbcType=VARCHAR},
      </if>
      <if test="commentUrl != null">
        comment_url = #{commentUrl,jdbcType=VARCHAR},
      </if>
      <if test="commentOriginalCommentId != null">
        comment_original_comment_id = #{commentOriginalCommentId,jdbcType=VARCHAR},
      </if>
      <if test="commentOriginalCommentName != null">
        comment_original_comment_name = #{commentOriginalCommentName,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="commentThumbnailUrl != null">
        comment_thumbnail_url = #{commentThumbnailUrl,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fdzang.microservice.blog.article.dao.domain.CommentDOWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    set comment_date = #{commentDate,jdbcType=TIMESTAMP},
      comment_email = #{commentEmail,jdbcType=VARCHAR},
      comment_name = #{commentName,jdbcType=VARCHAR},
      comment_article_id = #{commentArticleId,jdbcType=VARCHAR},
      comment_sharp_url = #{commentSharpUrl,jdbcType=VARCHAR},
      comment_url = #{commentUrl,jdbcType=VARCHAR},
      comment_original_comment_id = #{commentOriginalCommentId,jdbcType=VARCHAR},
      comment_original_comment_name = #{commentOriginalCommentName,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=LONGVARCHAR},
      comment_thumbnail_url = #{commentThumbnailUrl,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fdzang.microservice.blog.article.dao.domain.CommentDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    set comment_date = #{commentDate,jdbcType=TIMESTAMP},
      comment_email = #{commentEmail,jdbcType=VARCHAR},
      comment_name = #{commentName,jdbcType=VARCHAR},
      comment_article_id = #{commentArticleId,jdbcType=VARCHAR},
      comment_sharp_url = #{commentSharpUrl,jdbcType=VARCHAR},
      comment_url = #{commentUrl,jdbcType=VARCHAR},
      comment_original_comment_id = #{commentOriginalCommentId,jdbcType=VARCHAR},
      comment_original_comment_name = #{commentOriginalCommentName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>